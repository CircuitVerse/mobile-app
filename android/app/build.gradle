plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def environmentVariables = [
    FB_APP_NAME: 'FB_APP_NAME',
    FB_APP_ID: 'FB_APP_ID',
];

if (project.hasProperty('dart-defines')) {
    environmentVariables = environmentVariables + project.property('dart-defines')
        .split(',')
        .collectEntries { entry ->
            def decoded = entry
            try {
                decoded = new String(java.util.Base64.getDecoder().decode(entry), 'UTF-8')
            } catch (IllegalArgumentException ignored) {
                decoded = URLDecoder.decode(entry, 'UTF-8')
            }
            def pair = decoded.split('=', 2)
            [(pair[0]): (pair.size() > 1 ? pair[1] : '')]
        }
}

// debug keystore configuration
def debugKeystoreProperties = new Properties()
def debugKeystorePropertiesFile = rootProject.file('key.debug.properties')

if (debugKeystorePropertiesFile.exists()) {
    debugKeystoreProperties.load(new FileInputStream(debugKeystorePropertiesFile))
}

// release keystore configuration
def releaseKeystoreProperties = new Properties()
def releaseKeystorePropertiesFile = rootProject.file('key.release.properties')

if (releaseKeystorePropertiesFile.exists()) {
    releaseKeystoreProperties.load(new FileInputStream(releaseKeystorePropertiesFile))
}

android {
    compileSdk 35
    namespace 'org.circuitverse.mobile_app'

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lint {
        disable.add('InvalidPackage')
    }

    defaultConfig {
        applicationId "org.circuitverse.mobile_app"
        minSdk 23
        targetSdk 35
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        resValue "string", "app_name", environmentVariables.FB_APP_NAME
        resValue "string", "facebook_app_id", environmentVariables.FB_APP_ID
        resValue "string", "fb_login_protocol_scheme", "fb" + environmentVariables.FB_APP_ID
    }

    signingConfigs {
        debug {
            if (debugKeystorePropertiesFile.exists()) {
                keyAlias debugKeystoreProperties['keyAlias']
                keyPassword debugKeystoreProperties['keyPassword']
                storeFile file(debugKeystoreProperties['storeFile'])
                storePassword debugKeystoreProperties['storePassword']
            }
        }

        release {
            if (releaseKeystorePropertiesFile.exists()) {
                keyAlias releaseKeystoreProperties['keyAlias']
                keyPassword releaseKeystoreProperties['keyPassword']
                storeFile file(releaseKeystoreProperties['storeFile'])
                storePassword releaseKeystoreProperties['storePassword']
            }
        }
    }

    buildTypes {
        release {
            if(releaseKeystorePropertiesFile.exists()){
                signingConfig signingConfigs.release
            }else{
                signingConfig signingConfigs.debug
            }
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test:runner:1.6.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'
}

kotlin {
    jvmToolchain(17)
}