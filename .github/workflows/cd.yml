name: Release and Deploy

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release type (beta or prod)'
        required: true
        type: choice
        options:
          - beta
          - prod

env:
  FB_APP_ID: ${{ secrets.FB_APP_ID }}
  FB_APP_NAME: ${{ secrets.FB_APP_NAME }}
  GITHUB_OAUTH_CLIENT_ID: ${{ secrets.GH_OAUTH_CLIENT_ID }}
  GITHUB_OAUTH_CLIENT_SECRET: ${{ secrets.GH_OAUTH_CLIENT_SECRET }}
  FASTLANE_SUPPLY_JSON_KEY: ${{ secrets.FASTLANE_SUPPLY_JSON_KEY }}
  RELEASE_KEYSTORE: ${{ secrets.RELEASE_KEYSTORE }}
  RELEASE_KEYSTORE_PROPERTIES: ${{ secrets.RELEASE_KEYSTORE_PROPERTIES }}

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract Version from pubspec.yaml
        id: extract_version
        run: |
          VERSION=$(grep "version:" pubspec.yaml | awk '{print $2}')
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Generate Changelog
        uses: TriPSs/conventional-changelog-action@v3
        id: changelog
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          config: "angular"
          output-file: "CHANGELOG.md"
          version-file: "pubspec.yaml "

      - name: Create Release Tag
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          TAG_NAME="v${{ steps.extract_version.outputs.VERSION }}-${{ inputs.release_type }}"
          git tag $TAG_NAME -a -m "Release $TAG_NAME"
          git push origin $TAG_NAME

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v${{ steps.extract_version.outputs.VERSION }}-${{ inputs.release_type }}"
          release_name: "Release v${{ steps.extract_version.outputs.VERSION }}-${{ inputs.release_type }}"
          body: ${{ steps.changelog.outputs.clean_changelog }}
          draft: false
          prerelease: ${{ inputs.release_type == 'beta' }}

  deploy:
    needs: release
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      RELEASE_TYPE: ${{ inputs.release_type }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          bundler-cache: true

      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"

      - run: flutter clean
      - run: flutter pub get

      - run: flutter packages pub run build_runner build --delete-conflicting-outputs

      - run: dart format --set-exit-if-changed $(git ls-files '*.dart' ':!:*.mocks.dart')

      - run: flutter analyze .

      - run: echo "${FASTLANE_SUPPLY_JSON_KEY}" | base64 --decode > android/supply_json_key.json

      - run: echo "${RELEASE_KEYSTORE_PROPERTIES}" | base64 --decode > android/key.release.properties

      - run: echo "${RELEASE_KEYSTORE}" | base64 --decode > android/app/cv_release.jks

      - run: flutter build appbundle --dart-define=FB_APP_ID=${FB_APP_ID} --dart-define=FB_APP_NAME=${FB_APP_NAME} --dart-define=GITHUB_OAUTH_CLIENT_ID=${GITHUB_OAUTH_CLIENT_ID} --dart-define=GITHUB_OAUTH_CLIENT_SECRET=${GITHUB_OAUTH_CLIENT_SECRET}

      - uses: maierj/fastlane-action@v3.1.0
        with:
          lane: ${{ env.RELEASE_TYPE }}
          subdirectory: android
