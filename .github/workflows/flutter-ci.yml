name: Flutter CI

on:
  push:
    branches:
      - master
      - fastlane
  pull_request:

env:
  FB_APP_ID: ${{ secrets.FB_APP_ID }}
  GITHUB_OAUTH_CLIENT_ID: ${{ secrets.GITHUB_OAUTH_CLIENT_ID }}
  GITHUB_OAUTH_CLIENT_SECRET: ${{ secrets.GITHUB_OAUTH_CLIENT_SECRET }}
  SUPPLY_JSON_KEY: ${{ secrets.SUPPLY_JSON_KEY }}
  RELEASE_KEYSTORE: ${{ secrets.RELEASE_KEYSTORE }}
        
jobs:
  build:
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
    
    # Setup Java environment in order to build the Android app.
    - uses: actions/checkout@v1
    - uses: actions/setup-java@v1
      with:
        java-version: '12.x'

    # Setup Ruby for Fastlane
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.6
        bundler-cache: true
    
    # Setup the flutter environment.
    - uses: subosito/flutter-action@v1
      with:
        channel: 'stable'
    
    # Get flutter dependencies.
    - run: flutter pub get
    
    # Check for any formatting issues in the code.
    - run: flutter format --set-exit-if-changed .
    
    # Statically analyze the Dart code for any errors.
    - run: flutter analyze .
    
    # Run tests for our flutter project.
    - run: flutter test --coverage

    # Sends test coverage to coveralls
    - name: Coveralls
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        flag-name: run-${{ matrix.platform }}
        parallel: true

    # Save release props for signing
    - name: Release Properties
      if: ${{ github.event_name == 'push' }}
      run: echo "${RELEASE_KEYSTORE}" | base64 --decode > android/key.release.properties
    
    # Build apk
    - run: flutter build apk --dart-define=FB_APP_ID=${FB_APP_ID} --dart-define=GITHUB_OAUTH_CLIENT_ID=${GITHUB_OAUTH_CLIENT_ID} --dart-define=GITHUB_OAUTH_CLIENT_SECRET=${GITHUB_OAUTH_CLIENT_SECRET}
    
    # Build ios
    - name: Run ios build
      if: ${{ matrix.platform == 'macos-latest'}}
      run: flutter build ios --release --no-codesign --dart-define=FB_APP_ID=${FB_APP_ID} --dart-define=GITHUB_OAUTH_CLIENT_ID=${GITHUB_OAUTH_CLIENT_ID} --dart-define=GITHUB_OAUTH_CLIENT_SECRET=${GITHUB_OAUTH_CLIENT_SECRET}
    
    # Upload generated apk to the artifacts.
    - uses: actions/upload-artifact@v1
      with:
        name: release-apk
        path: build/app/outputs/apk/release/app-release.apk

  finish:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Coveralls
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        parallel-finished: true

  deploy:
    needs: finish
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }}
    steps:
    - run: cd android
    - name: Fastlane Supply
      run: bundle exec fastlane supply init

    - name: Fastlane Beta Deploy
      run: bundle exec fastlane beta
