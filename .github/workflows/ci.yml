name: CI

on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-and-test:
    name: Lint and Test
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    timeout-minutes: 30
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true

      # Windows specific configuration
      - name: Configure Git for Windows
        if: matrix.platform == 'windows-latest'
        run: git config --system core.longpaths true

      # Caching dependencies
      - name: Cache Pub dependencies
        uses: actions/cache@v3
        with:
          path: ${{ env.PUB_CACHE }}
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-pub-

      # Get dependencies and run build_runner
      - name: Flutter pub get
        run: flutter pub get

      - name: Generate Dart files
        run: flutter pub run build_runner build --delete-conflicting-outputs

      # Analyze and test
      - name: Check formatting
        run: dart format --output=none --set-exit-if-changed .

      - name: Flutter analyze
        run: flutter analyze --no-pub

      - name: Run Flutter tests
        run: flutter test --coverage

      # Upload coverage
      - name: Upload coverage to Coveralls
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flag-name: run-${{ matrix.platform }}
          parallel: true

  build-android:
    name: Build Android
    needs: lint-and-test
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true

      - name: Flutter pub get
        run: flutter pub get

      - name: Generate Dart files
        run: flutter pub run build_runner build --delete-conflicting-outputs

      - name: Build APK
        run: flutter build apk --release

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: build/app/outputs/apk/release/app-release.apk
          retention-days: 7

  build-ios:
    name: Build iOS
    needs: lint-and-test
    runs-on: macos-latest
    timeout-minutes: 30
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true

      - name: Flutter pub get
        run: flutter pub get

      - name: Generate Dart files
        run: flutter pub run build_runner build --delete-conflicting-outputs

      - name: Install CocoaPods dependencies
        run: |
          cd ios
          rm -f Podfile.lock
          pod install

      - name: Build iOS
        run: flutter build ios --release --no-codesign

      - name: Archive iOS build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ios-build
          path: build/ios/iphoneos
          retention-days: 7

  report-coverage:
    name: Report Coverage
    needs: [lint-and-test]
    runs-on: ubuntu-latest
    steps:
      - name: Finalize Coveralls
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true
