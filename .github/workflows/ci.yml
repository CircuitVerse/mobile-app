name: CI

on:
  push:
    branches:
      - master
      - main
      - develop
  pull_request:
    branches:
      - master
      - main
      - develop

# Minimal permissions by default
permissions:
  contents: read

jobs:
  test:
    name: Test & Analyze
    permissions:
      contents: read
      checks: write  # for test results
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    timeout-minutes: 30
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          flutter-version: 3.32
          
      - name: Cache pub dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            **/.dart_tool
            **/.packages
            **/.flutter-plugins
            **/.flutter-plugin-dependencies
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-pub-

      - name: Clean and Get Dependencies
        run: |
          flutter clean
          flutter pub get || (flutter pub upgrade --major-versions && flutter pub get)

      - name: Generate Localization Files
        run: flutter gen-l10n

      - name: Build Runner (Generate Dart Files)
        run: flutter packages pub run build_runner build --delete-conflicting-outputs

      - name: Format Check (Exclude generated files)
        if: matrix.platform != 'windows-latest'
        run: |
          dart format --set-exit-if-changed \
            $(find . -name "*.dart" \
              -not -path "./lib/gen_l10n/*" \
              -not -path "./.dart_tool/*" \
              -not -path "./build/*" \
              -not -name "*.g.dart" \
              -not -name "*.freezed.dart" \
              -not -name "*.mocks.dart")

      - name: Analyze Code
        run: flutter analyze

      - name: Run Tests with Coverage
        run: flutter test --coverage

      - name: Upload Coverage to Coveralls
        if: matrix.platform == 'ubuntu-latest'
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flag-name: run-${{ matrix.platform }}
          parallel: true
          coverage-reporter-version: v0.6.15
          fail-on-error: false

  build-validation:
    name: Build Validation
    needs: test
    strategy:
      matrix:
        include:
          - platform: ubuntu-latest
            build-type: android
          - platform: macos-14
            build-type: ios
          - platform: windows-latest
            build-type: windows
    runs-on: ${{ matrix.platform }}
    timeout-minutes: 45
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Java (for Android)
        if: matrix.build-type == 'android'
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          flutter-version: 3.32

          
      - name: Cache Gradle (Android)
        if: matrix.build-type == 'android'
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            android/.gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Cache CocoaPods (iOS)
        if: matrix.build-type == 'ios'
        uses: actions/cache@v4
        with:
          path: ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Get Dependencies
        run: |
          flutter clean
          flutter pub get
          flutter gen-l10n
          flutter packages pub run build_runner build --delete-conflicting-outputs

      # Android Build Validation
      - name: Build APK Debug (Android)
        if: matrix.build-type == 'android'
        env:
          GH_OAUTH_CLIENT_ID: ${{ secrets.GH_OAUTH_CLIENT_ID }}
          GH_OAUTH_CLIENT_SECRET: ${{ secrets.GH_OAUTH_CLIENT_SECRET }}
        run: |
          flutter build apk --debug \
            --dart-define=GITHUB_OAUTH_CLIENT_ID=$GH_OAUTH_CLIENT_ID \
            --dart-define=GITHUB_OAUTH_CLIENT_SECRET=$GH_OAUTH_CLIENT_SECRET

      - name: Upload Android APK
        if: matrix.build-type == 'android'
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: build/app/outputs/flutter-apk/app-debug.apk
          retention-days: 7

      # iOS Build Validation
      - name: Ensure CocoaPods (iOS)
        if: matrix.build-type == 'ios'
        run: sudo gem install cocoapods --no-document || true

      - name: Update CocoaPods Specs Repo (iOS)
        if: matrix.build-type == 'ios'
        run: |
          cd ios
          pod repo update
          cd ..

      - name: Install CocoaPods dependencies (iOS)
        if: matrix.build-type == 'ios'
        run: |
          cd ios
          pod install
          cd ..

      - name: List iOS Simulators
        if: matrix.build-type == 'ios'
        run: xcrun simctl list devices

      - name: Build iOS Debug (No Code Signing)
        if: matrix.build-type == 'ios'
        env:
          GH_OAUTH_CLIENT_ID: ${{ secrets.GH_OAUTH_CLIENT_ID }}
          GH_OAUTH_CLIENT_SECRET: ${{ secrets.GH_OAUTH_CLIENT_SECRET }}
        run: |
          flutter build ios --debug --no-codesign --simulator \
            --dart-define=GITHUB_OAUTH_CLIENT_ID=$GH_OAUTH_CLIENT_ID \
            --dart-define=GITHUB_OAUTH_CLIENT_SECRET=$GH_OAUTH_CLIENT_SECRET

      # Windows Build Validation
      - name: Build Windows Debug
        if: matrix.build-type == 'windows'
        env:
          GH_OAUTH_CLIENT_ID: ${{ secrets.GH_OAUTH_CLIENT_ID }}
          GH_OAUTH_CLIENT_SECRET: ${{ secrets.GH_OAUTH_CLIENT_SECRET }}
        run: flutter build windows --debug --dart-define=GITHUB_OAUTH_CLIENT_ID=$env:GH_OAUTH_CLIENT_ID --dart-define=GITHUB_OAUTH_CLIENT_SECRET=$env:GH_OAUTH_CLIENT_SECRET

  coverage-finish:
    name: Finalize Coverage
    needs: [test, build-validation]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Finalize Coveralls Reporting
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true
          coverage-reporter-version: v0.6.15
          fail-on-error: false

      - name: Download APK Artifact
        uses: actions/download-artifact@v5
        with:
          name: android-apk
          path: build/app/outputs/flutter-apk/
          
      - name: Get Current Date
        id: date
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Checkout Repository (for tagging)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.sha }}

      - name: Create Release Tag
        if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git tag -a v${{ github.run_number }} -m "Release v${{ github.run_number }}"
          git push origin v${{ github.run_number }}

      - name: Create Release
        if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: v${{ github.run_number }}
          files: build/app/outputs/flutter-apk/app-debug.apk

  preview-apk:
    name: Build Preview APK
    if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.fork == false
    needs: [test, build-validation]
    permissions:
      contents: read
      pull-requests: write  # for PR comments
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          flutter-version: 3.32

          
      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            android/.gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Download Android APK from Build Validation
        uses: actions/download-artifact@v5
        with:
          name: android-apk
          path: build/app/outputs/flutter-apk/

      - name: Comment PR with APK Link
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const path = 'build/app/outputs/flutter-apk/app-debug.apk';
            
            if (fs.existsSync(path)) {
              const stats = fs.statSync(path);
              const sizeInMB = (stats.size / (1024 * 1024)).toFixed(2);
              
              const comment = `### 📱 Preview APK Ready!\n\n` +
                `**Size:** ${sizeInMB} MB\n` +
                `**Build:** #${{ github.run_number }}\n` +
                `**Commit:** \`${context.sha.substring(0, 7)}\`\n\n` +
                `Download the APK from the [Actions artifacts](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}).\n\n` +
                `> ⚠️ This is a preview build for testing purposes only.`;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }
